name: "CI - Test Audit"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.shard.outputs.matrix }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prepare Stage (Lint, Typecheck, Build, Unit, Shard)
        id: shard
        run: |
          ./test-audit.sh prepare

          # Count shards and prepare JSON array for matrix
          COUNT=$(jq '.shard_count' ./test-support/e2e-shards.json)
          INDICES=$(seq 0 $((COUNT-1)) | jq -R . | jq -s .)
          echo "matrix=$INDICES" >> $GITHUB_OUTPUT

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: ./test-support/

  test:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shard-index: ${{ fromJson(needs.prepare.outputs.matrix) }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path: ./test-support/

      - name: Run E2E Test Shard
        run: ./test-audit.sh test ${{ matrix.shard-index }}

  report:
    needs: [prepare, test]
    # Always run the report stage to see partial results, even if tests fail
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-artifacts
          path: ./test-support/

      - name: Generate Final Report and Update Docs
        run: ./test-audit.sh report

      - name: Commit documentation changes
        if: success() # Only commit if the entire workflow was successful
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "docs(sqm): Update test audit metrics"
          branch: ${{ github.head_ref || github.ref_name }}
          file_pattern: 'docs/PRD.md'