/**
 * Calculates the Word Error Rate (WER) between a reference and a hypothesis string.
 * WER is defined as (Substitutions + Deletions + Insertions) / Number of words in reference.
 *
 * @param {string} reference - The ground truth transcript.
 * @param {string} hypothesis - The transcript generated by the STT engine.
 * @returns {number} The Word Error Rate.
 */
export const calculateWordErrorRate = (reference: string, hypothesis: string): number => {
  if (!reference) return hypothesis ? hypothesis.split(/\s+/).length : 0;
  if (!hypothesis) return 1; // All words are deleted, so error rate is 1.

  const refWords = reference.toLowerCase().split(/\s+/);
  const hypWords = hypothesis.toLowerCase().split(/\s+/);

  const dp = Array(refWords.length + 1).fill(null).map(() => Array(hypWords.length + 1).fill(0));

  for (let i = 0; i <= refWords.length; i++) {
    dp[i][0] = i;
  }
  for (let j = 0; j <= hypWords.length; j++) {
    dp[0][j] = j;
  }

  for (let i = 1; i <= refWords.length; i++) {
    for (let j = 1; j <= hypWords.length; j++) {
      const cost = refWords[i - 1] === hypWords[j - 1] ? 0 : 1;
      dp[i][j] = Math.min(
        dp[i - 1][j] + 1,      // Deletion
        dp[i][j - 1] + 1,      // Insertion
        dp[i - 1][j - 1] + cost // Substitution
      );
    }
  }

  const errors = dp[refWords.length][hypWords.length];
  return errors / refWords.length;
};